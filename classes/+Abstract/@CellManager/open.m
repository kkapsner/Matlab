function open(this)
    if (isfield(this.handles, 'figure') && ishandle(this.handles.figure))
        return;
    end
    
    this.handles = struct();
    
    width = 500;
    height = 400;
    
    if (isempty(this.title))
        title = 'Cell Manager';
    else
        title = this.title;
    end
    
    this.handles.figure = handle(figure( ...
        'NumberTitle', 'off', ...
        'Name', title, ...
        'HandleVisibility', 'off', ...
        'Color', 'w', ...
        'Position', [50, 50, width - 1, height], ...
        'CloseRequestFcn', @this.close, ...
        'Resize', 'on', ...
        'Menubar', 'none', ...
        'Toolbar', 'none' ...
    ));
    try
        addlistener(this.handles.figure, 'SizeChanged', @arrangeFigure);
    catch
        addlistener(this.handles.figure, 'SizeChange', @arrangeFigure);
    end
    
    this.handles.header = this.createHeader();
    [this.handles.outerContainer, this.handles.innerContainer] = ...
        Gui.createScrollablePanel(this.handles.figure, @this.arrangeContainer);
    this.handles.outerContainer.BackgroundColor = this.handles.figure.Color;
    this.handles.entryPanels = {};
    movegui(this.handles.figure, 'center');
    arrangeFigure();
    notify(this, 'winOpen');
    
    function arrangeFigure(~,~)
        pos = this.handles.figure.Position;
        this.handles.header.Position = [ ...
            10, ...
            pos(4) - 10 - 30, ...
            pos(3) - 20, ...
            30 ...
        ];
        this.handles.outerContainer.Position = [ ...
            10, ...
            10, ...
            pos(3) - 20, ...
            pos(4) - 10 - 10 - 30 ...
        ];
    end
end