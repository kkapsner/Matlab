function stack = guiCalculate(stacks)
%GUICALCULATE creates a GUI to create one operation
%   STACK = GUICALCULATE(STACKS) STACKS has to be a cell of TiffStacks (or
%   derivated classes).
    if ~iscell(stacks)
        stacks = arrayfun(@(a)a, stacks, 'UniformOutput', false);
    end
    names = cellfun(@(s)s.char(), stacks, 'Uniform', false);
    operations = {'+', '-', '*', '/', '^'};
    
    width = 200;
    height = 90;
    
    f = handle(figure( ...
        'NumberTitle', 'off', ...
        'Name', 'Calculate with stacks', ...
        'HandleVisibility', 'off', ...
        'Color', 'w', ...
        'Position', [50, 50, width, height], ...
        'CloseRequestFcn', @calculate, ...
        'Resize', 'off', ...
        'Menubar', 'none', ...
        'Toolbar', 'none' ...
    ));
    
    firstOperant = handle(uicontrol( ...
        'Parent', f, ...
        'Style', 'popupmenu', ...
        'HandleVisibility', 'off', ...
        'String', names, ...
        'Position', [10, 60, width - 20, 20] ...
    ));
    operation = handle(uicontrol( ...
        'Parent', f, ...
        'Style', 'popupmenu', ...
        'HandleVisibility', 'off', ...
        'String', operations, ...
        'Position', [(width - 20 - 40) / 2, 35, 40, 20] ...
    ));
    secondOperant = handle(uicontrol( ...
        'Parent', f, ...
        'Style', 'popupmenu', ...
        'HandleVisibility', 'off', ...
        'String', names, ...
        'Position', [10, 10, width - 20, 20] ...
    ));
    movegui(f, 'center');
    uiwait(f);
    
    function calculate(~,~)
        stack1 = stacks{firstOperant.Value};
        stack2 = stacks{secondOperant.Value};
        op = operations{operation.Value};
        stack = CalculationTiffStack(stack1, op, stack2);
        
        delete(f);
    end
end