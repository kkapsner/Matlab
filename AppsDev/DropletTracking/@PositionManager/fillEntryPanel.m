function fillEntryPanel(this, entry, panel)
    [~, api] = Gui.createAutofitPanel('panel', panel, 'margin', 0, 'stackSpacing', 0);
    
    firstRow = api.addPanel('Units', 'pixels', 'Position', [0, 0, 10, 25]);
    Gui.bindBackgroundColorToParent(firstRow);
    
    secondRow = api.addPanel('Position', [0, 0, 10, 100]);
    Gui.bindBackgroundColorToParent(secondRow);
    secondRow.Visible = 'off';
    stackManager = StackManager('stacks', entry.stacks);
    addlistener(stackManager, 'content', 'PostSet', @copyStacks);
    stackManager.expandToFit = true;
    stackManager.open(secondRow);
    
    Gui.createExpandArrow(secondRow, ...
        'Parent', firstRow, ...
        'Units', 'pixels', ...
        'Position', [5, 5, 20, 20] ...
    );
    name = uicontrol( ...
        'Parent', firstRow, ...
        'Style', 'text', ...
        'String', sprintf('Position %d', entry.index), ...
        'HorizontalAlign', 'left', ...
        'Position', [25, 2, 100, 20] ...
    );
    Gui.bindBackgroundColorToParent(name);
    removeButton = uicontrol( ...
        'Parent', firstRow, ...
        'Style', 'pushbutton', ...
        'String', '-', ...
        'Callback',  @(~,~)this.removeEntry(entry), ...
        'Position', [25, 5, 20, 20] ...
    );
    arrangeFirstRow();
    l = [
        addlistener(panel, 'SizeChanged', @arrangeFirstRow)
        addlistener(panel, 'ObjectBeingDestroyed', @removeListener)
    ];
    function arrangeFirstRow(~,~)
        width = firstRow.Position(3);
        removeButton.Position(1) = width - 25;
        name.Position(3) = max(1, width - 30 - 20);
    end
    function removeListener(~,~)
        delete(l);
    end
    function copyStacks(~,~)
        entry.stacks = stackManager.content;
    end
end

