function createControls(obj)
%CREATECONTROLS creates the GUI controls for vertical marker
%
    % panel
    obj.controls.panel = handle(uipanel( ...
        'Units', obj.units, ...
        'BorderWidth', 0, ...
        'Parent', obj.parent ...
    ));
    obj.controls.panel.Position = obj.position;
    obj.controls.panel.ResizeFcn = @manageLayout;


    % valueInput
    obj.controls.valueInput = Gui.NumericInput( ...
        'HandleVisibility', 'off', ...
        'Visible', logicalToString(obj.valueInput), ...
        'Value', obj.value, ...
        'Parent', obj.controls.panel ...
    );
    
    % minInput
    obj.controls.minInput = Gui.NumericInput( ...
        'HandleVisibility', 'off', ...
        'Visible', logicalToString(obj.minInput), ...
        'Value', obj.min, ...
        'Parent', obj.controls.panel ...
    );
    % slider
    obj.controls.slider = handle(uicontrol( ...
        'Style', 'slider', ...
        'Value', obj.value, ...
        'Min', obj.min, ...
        'Max', obj.max, ...
        'SliderStep', [0.01, 0.1], ...
        'HandleVisibility', 'off', ...
        'Visible', logicalToString(obj.sliderInput), ...
        'BackgroundColor', obj.color, ...
        'Position', [0 0 100 15], ...
        'Parent', obj.controls.panel ...
    ));

    % maxInput
    obj.controls.maxInput = Gui.NumericInput( ...
        'HandleVisibility', 'off', ...
        'Visible', logicalToString(obj.maxInput), ...
        'Value', obj.max, ...
        'Parent', obj.controls.panel ...
    );

    obj.controls.imline = Gui.imhline( ...
        obj.axes,  ...
        obj.value ...
    );
    obj.controls.imline.positionConstraintFcn = @markerConstraint;
    obj.controls.imline.color = obj.color;

    obj.repaint();
    
    function pos = markerConstraint(pos)
        if (pos < obj.min)
            pos = obj.min;
        elseif (pos > obj.max)
            pos = obj.max;
        end
    end
end

